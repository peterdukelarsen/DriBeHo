/*
 * This file is generated by jOOQ.
 */
package com.dribeho.database.jooq.tables.records;


import com.dribeho.database.jooq.tables.Reviews;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewsRecord extends UpdatableRecordImpl<ReviewsRecord> implements Record7<String, String, String, Byte, String, LocalDate, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>dribehodb.reviews.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>dribehodb.reviews.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dribehodb.reviews.shop_id</code>.
     */
    public void setShopId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.shop_id</code>.
     */
    public String getShopId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dribehodb.reviews.rating</code>.
     */
    public void setRating(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.rating</code>.
     */
    public Byte getRating() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>dribehodb.reviews.review_text</code>.
     */
    public void setReviewText(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.review_text</code>.
     */
    public String getReviewText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>dribehodb.reviews.date_posted</code>.
     */
    public void setDatePosted(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.date_posted</code>.
     */
    public LocalDate getDatePosted() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>dribehodb.reviews.helpful_votes</code>.
     */
    public void setHelpfulVotes(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>dribehodb.reviews.helpful_votes</code>.
     */
    public Integer getHelpfulVotes() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, Byte, String, LocalDate, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, Byte, String, LocalDate, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Reviews.REVIEWS.ID;
    }

    @Override
    public Field<String> field2() {
        return Reviews.REVIEWS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Reviews.REVIEWS.SHOP_ID;
    }

    @Override
    public Field<Byte> field4() {
        return Reviews.REVIEWS.RATING;
    }

    @Override
    public Field<String> field5() {
        return Reviews.REVIEWS.REVIEW_TEXT;
    }

    @Override
    public Field<LocalDate> field6() {
        return Reviews.REVIEWS.DATE_POSTED;
    }

    @Override
    public Field<Integer> field7() {
        return Reviews.REVIEWS.HELPFUL_VOTES;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getShopId();
    }

    @Override
    public Byte component4() {
        return getRating();
    }

    @Override
    public String component5() {
        return getReviewText();
    }

    @Override
    public LocalDate component6() {
        return getDatePosted();
    }

    @Override
    public Integer component7() {
        return getHelpfulVotes();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getShopId();
    }

    @Override
    public Byte value4() {
        return getRating();
    }

    @Override
    public String value5() {
        return getReviewText();
    }

    @Override
    public LocalDate value6() {
        return getDatePosted();
    }

    @Override
    public Integer value7() {
        return getHelpfulVotes();
    }

    @Override
    public ReviewsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ReviewsRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public ReviewsRecord value3(String value) {
        setShopId(value);
        return this;
    }

    @Override
    public ReviewsRecord value4(Byte value) {
        setRating(value);
        return this;
    }

    @Override
    public ReviewsRecord value5(String value) {
        setReviewText(value);
        return this;
    }

    @Override
    public ReviewsRecord value6(LocalDate value) {
        setDatePosted(value);
        return this;
    }

    @Override
    public ReviewsRecord value7(Integer value) {
        setHelpfulVotes(value);
        return this;
    }

    @Override
    public ReviewsRecord values(String value1, String value2, String value3, Byte value4, String value5, LocalDate value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReviewsRecord
     */
    public ReviewsRecord() {
        super(Reviews.REVIEWS);
    }

    /**
     * Create a detached, initialised ReviewsRecord
     */
    public ReviewsRecord(String id, String userId, String shopId, Byte rating, String reviewText, LocalDate datePosted, Integer helpfulVotes) {
        super(Reviews.REVIEWS);

        setId(id);
        setUserId(userId);
        setShopId(shopId);
        setRating(rating);
        setReviewText(reviewText);
        setDatePosted(datePosted);
        setHelpfulVotes(helpfulVotes);
    }
}
