/*
 * This file is generated by jOOQ.
 */
package com.dribeho.database.jooq;


import com.dribeho.database.jooq.tables.Cafes;
import com.dribeho.database.jooq.tables.FlywaySchemaHistory;
import com.dribeho.database.jooq.tables.Images;
import com.dribeho.database.jooq.tables.Quarkus;
import com.dribeho.database.jooq.tables.Reviews;
import com.dribeho.database.jooq.tables.Users;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dribehodb extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dribehodb</code>
     */
    public static final Dribehodb DRIBEHODB = new Dribehodb();

    /**
     * The table <code>dribehodb.cafes</code>.
     */
    public final Cafes CAFES = Cafes.CAFES;

    /**
     * The table <code>dribehodb.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>dribehodb.images</code>.
     */
    public final Images IMAGES = Images.IMAGES;

    /**
     * The table <code>dribehodb.quarkus</code>.
     */
    public final Quarkus QUARKUS = Quarkus.QUARKUS;

    /**
     * The table <code>dribehodb.reviews</code>.
     */
    public final Reviews REVIEWS = Reviews.REVIEWS;

    /**
     * The table <code>dribehodb.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Dribehodb() {
        super("dribehodb", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Cafes.CAFES,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Images.IMAGES,
            Quarkus.QUARKUS,
            Reviews.REVIEWS,
            Users.USERS
        );
    }
}
